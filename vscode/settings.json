{
  "workbench.colorTheme": "GitHub Dark Default",
  // [밝은 테마와 어두운 테마 간 전환](https://code.visualstudio.com/updates/v1_69#_toggle-between-light-and-dark-themes)
  "workbench.preferredLightColorTheme": "GitHub Light Default",
  "workbench.preferredDarkColorTheme": "GitHub Dark Default",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none", // VSCode 시작 시 시작 매뉴 보이지 않도록

  "terminal.integrated.fontFamily": "MesloLGS NF",

  "files.autoSave": "onFocusChange", // 포커스가 손실되면 변경된 편집기는 자동으로 저장
  "files.associations": {
    // "*.ts": "typescriptreact" // react의 snippets을 공유해서 사용하기 위함 (하지만 파일 아이콘이 모두 react으로 변하는 불편함이 있어 전역 코드 조각으로 변경)
    "*.json": "jsonc", // json에 주석을 사용할 수 있도록
    // [사용자 정의 env 파일 확장자](https://marketplace.visualstudio.com/items?itemName=IronGeek.vscode-env#custom-env-file-extension)
    "*.env.development": "env",
    "*.env.production": "env",
    "*.env.test": "env"
  },

  /* Editor */

  "editor.cursorSmoothCaretAnimation": "on",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.suggest.preview": true, // [제안 미리보기가 활성화](https://code.visualstudio.com/updates/v1_60#_inline-suggestions-in-autocomplete)
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "always",
    "source.organizeImports": "always" // [사용하지 않는 import 제거 및 정렬](https://webruden.tistory.com/1069)
    // [사용하지 않는 import를 자동으로 정리](https://devblogs.microsoft.com/typescript/announcing-typescript-4-9-rc/#sort-remove-import-commands): `source.organizeImports` 는 사용하지 않는 import 제거 및 정렬 기능도 있어서 `eslint` 의 `simple-import-sort` 와 충돌할 수 있습니다.
    // "source.removeUnusedImports": "always"
  },
  "editor.bracketPairColorization.enabled": true, // [native bracket 사용](https://github.com/CoenraadS/Bracket-Pair-Colorizer-2#how-to-enable-native-bracket-matching)
  // [수평 브래킷 가이드 사용](https://code.visualstudio.com/updates/v1_67#_bracket-guide-improvements)
  "editor.guides.bracketPairsHorizontal": true,
  "editor.guides.bracketPairs": "active",
  // [인라인 완성으로 빠른 제안](https://code.visualstudio.com/updates/v1_66#_quick-suggestions-as-inline-completions)
  "editor.quickSuggestions": {
    "comments": "on",
    "strings": "on",
    "other": "on"
  },
  "editor.stickyScroll.enabled": true, // [Sticky Scroll](https://code.visualstudio.com/updates/v1_71#_sticky-scroll)
  "editor.linkedEditing": true, // [Tag를 쌍으로 수정해 줌, 덕분에 Auto Rename Tag 확장을 사용하지 않아도 됨](https://code.visualstudio.com/updates/v1_79#_linked-editing-for-jsx-tags)

  // Diff 편집기가 선행 또는 후행 공백의 변경 내용을 무시하지 않도록
  "diffEditor.ignoreTrimWhitespace": false,

  "window.confirmBeforeClose": "keyboardOnly", // vim 사용하면서 대부분 액션을 키보드로 조작하게 되었는데 그러면서 실수로 `ctrl` + `shift` + `w` 를 누르며 VSCode가 종료되는 경험이 반복되어 컨펌 창 추가

  "git.autofetch": true, // vscode에서 주기적으로 git fetch하는 기능 활성화: 오른쪽 하단에 자동 알림화면에 뜨길래 설정함
  "git.openRepositoryInParentFolders": "always", // 항상 작업 영역의 부모 폴더의 git repo 열기

  /* Extensions 옵션 */

  "extensions.experimental.affinity": {
    /**
     * [Neovim 공식 문서에서 활성화 하라고 나와있는데 해당 설정 안해도 잘 되었는데 설정하라고 공식문서에서 그러니 설정합니다](https://github.com/vscode-neovim/vscode-neovim#installation)
     * [찾아보니까 성능 문제 때문에 활성화 하는 것이네요](https://github.com/vscode-neovim/vscode-neovim#performance-problems)
     */
    "asvetliakov.vscode-neovim": 1
  },

  // markdown에서 비활성화 되어있길래 활성화 버튼 누르면 자동으로 아래의 옵션이 설정되었으며 해당 기본 값을 그대로 사용
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },

  "prettier.singleQuote": false,
  "prettier.printWidth": 80, // [기본 값 사용](https://prettier.io/docs/en/options.html#print-width)

  "liveServer.settings.donotShowInfoMsg": true,

  "redhat.telemetry.enabled": false, // redhat yaml 관련 팝업 계속 떠서 비활성화

  // NOTE: 도 어노테이션에 추가하려고: 보편적으로 많이 사용하니까
  "todohighlight.keywords": [
    {
      "text": "NOTE:",
      "color": "#ff0000",
      "backgroundColor": "yellow",
      "overviewRulerColor": "grey"
    }
  ],
  // .cs, .go 등 기본 값 파일 이외 추가 등록
  "todohighlight.include": [
    "**/*.txt",
    "**/*.json",
    "**/*.yml",
    "**/*.yaml",
    "**/*.http",
    "**/*.md",
    "**/*.mdx",

    "**/*.html",
    "**/*.css",
    "**/*.scss",

    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.cs",
    "**/*.go",
    "**/*.cpp",
    "**/*.php"
  ],

  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  "rest-client.previewOption": "exchange", // 요청 내용도 볼 수 있도록 활성화, 원래는 응답만 볼 수 있도록 설정되어 있습니다.

  // 2022-10-23자로 NeoVim으로 전환하여 해당 설정은 모두 주석처리 하였습니다
  // Vim 설정: 해당 설정에서 조정이 안되는 것은 keybindings.json 에도 있습니다
  // "vim.handleKeys": {
  //   // 숫자 감소시키기 하려고
  //   // "<C-x>": false,
  //   // 숫자 증가시키기 하려고
  //   // "<C-a>": false,
  //   // 반 페이지 스크롤 하려고
  //   // "<C-d>": false,
  //   // vim 네이티브로 window 이동 하려고
  //   // "<C-w>": false,
  //   "<C-z>": false,
  //   "<C-c>": false,
  //   "<C-v>": false,
  //   "<C-f>": false,
  //   "<C-pageup>": false,
  //   "<C-pagedown>": false
  // },
  // // "+p와 같은 방식으로 복붙하기 불편함으로 시스템 클립보드와 연동
  // "vim.useSystemClipboard": true,

  "vscode-neovim.useWSL": true, // WSL에서 nvim 사용하기 위함
  "vscode-neovim.neovimExecutablePaths.linux": "/home/linuxbrew/.linuxbrew/bin/nvim", // linux에서 까지는 테스트를 안해보았지만 WSL에서 테스트 결과 WSL에서만 호출되는 경로 입니다: "which nvim" 으로 나온 경로를 입력합니다.

  "playwright.reuseBrowser": true,
  "playwright.showTrace": false,

  "svn.ignoreMissingSvnWarning": true, // 개발 2팀 개발 환경 때문에 SVN 확장 설치한 것인데 SVN 필요 없는 상황에서도 나오는 경고 메시지 보기 싫어서 비활성화

  /* language */

  /* Markdown */

  // [파일 이동 및 이름 변경 시 마크다운 링크 업데이트](https://code.visualstudio.com/updates/v1_71#_markdown-link-update-on-file-move-and-rename)
  // [정식 기능으로 출시](https://code.visualstudio.com/updates/v1_73#_markdown-automatic-link-updates-on-file-rename-move)
  "markdown.updateLinksOnFileMove.enabled": "always",
  "markdown.validate.enabled": true, // [마크다운 링크 유효성 검사](https://code.visualstudio.com/updates/v1_72#_markdown-link-validation)
  "markdown.occurrencesHighlight.enabled": true, // [마크다운 링크 발생 강조 표시](https://code.visualstudio.com/updates/v1_73#_markdown-link-occurrence-highlighting)
  // [MD에서는 URL 붙어넣으면 바로 링크 형식으로 만들어줌](https://code.visualstudio.com/updates/v1_80#_markdown-format-pasted-urls-as-markdown-links)
  // [이미 링크가 있는 상태에서 붙어넣기를 하면 무조건 링크를 만들려고 해서 불편했는데 해당 부분 업데이트 된 내용](https://code.visualstudio.com/updates/v1_81#_markdown-paste-urls-as-formatted-links)
  "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",

  /* JS/TS */

  // [Inlay hints 활성화](https://code.visualstudio.com/updates/v1_60#_inlay-hints-for-javascript-and-typescript)
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  // 유용하게 쓰긴 했는데 이걸 사용하면 Theme에 맞는 Inlay 색상이 적용되지 않아 일단 비활성화 했습니다.
  // "workbench.colorCustomizations": {
  //   "editorInlayHint.foreground": "#abb2bf",
  //   "editorInlayHint.background": "#abb2bf30"
  // },
  // 항상 모듈 변경된 경로 자동으로 가져오기 활성화
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  // [JSX 자동으로 속성에 맞는 스니펫 생성](https://code.visualstudio.com/updates/v1_63#_jsx-attribute-completions)
  "javascript.preferences.jsxAttributeCompletionStyle": "auto",
  "typescript.preferences.jsxAttributeCompletionStyle": "auto",

  "typescript.tsserver.maxTsServerMemory": 10240, // ts 설정 살펴보다가 발견함 속도가 느려서 메모리 10GB 주고 성능 향상이 있는지 보려고 함
  "typescript.preferences.includePackageJsonAutoImports": "on", // MUI가 들어간 프로젝트의 경우 도중에 import가 안되는 경우가 있는데 [해당 옵션을 활성화 해서 항상 잘 표시되는지 확인하려고 함](https://velog.io/@hustle-dev/TypeScript-4.0-%EB%B2%88%EC%97%AD#%EB%8D%94-%EB%98%91%EB%98%91%ED%95%9C-%EC%9E%90%EB%8F%99-import)

  /* Go */

  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "go.gopath": "",
  "go.toolsManagement.autoUpdate": true,
  "go.delveConfig": {
    "debugAdapter": "legacy" // [handler에 중단점을 찍을 때마다 디버깅이 중지되어서 일단은 레거시 디버깅 사용](https://stackoverflow.com/questions/69156581/does-the-execution-have-to-keep-stopping-to-set-a-breakpoint)
  },
  // [Golang 확장 인레이 힌트 활성화](https://twitter.com/golang/status/1549106172870987776?s=21&t=5wEfMWJLporZ3Erph2QTwA)
  // [Release Note](https://github.com/golang/vscode-go/releases/tag/v0.35.0)
  "go.inlayHints.assignVariableTypes": true,
  "go.inlayHints.compositeLiteralFields": true,
  "go.inlayHints.compositeLiteralTypes": true,
  "go.inlayHints.constantValues": true,
  "go.inlayHints.functionTypeParameters": true,
  "go.inlayHints.rangeVariableTypes": true,
  "go.inlayHints.parameterNames": true,

  /* dotnet and C# */

  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp" // [C#의 경우 prettier를 지원하지 않아 아래의 포멧터를 사용합니다.](https://stackoverflow.com/questions/47352611/visual-studio-code-doesnt-format-c-sharp-code)
  },
  // C# Dev Kit이 생김에 따라 굳이 사용하지 않아도 될 거 같아서 비활성화 처리
  // "omnisharp.enableRoslynAnalyzers": true, // [소스 코드 분석기를 활성화 합니다](https://docs.microsoft.com/en-us/visualstudio/code-quality/roslyn-analyzers-overview?view=vs-2019#severity-levels-of-analyzers)
  // "omnisharp.useEditorFormattingSettings": false,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,

  "csharp.inlayHints.enableInlayHintsForTypes": true,
  "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
  "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,

  /* Prisma */

  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },

  /* C++ */

  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "C_Cpp.clang_format_fallbackStyle": "Google", // [코드 포매팅 스타일을 정의합니다](https://80000coding.oopy.io/bd5c80d7-92ce-4387-ae74-b6d35ad77635)
  "C_Cpp.inlayHints.autoDeclarationTypes.enabled": true,
  "C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": true,
  "C_Cpp.inlayHints.parameterNames.enabled": true,
  "C_Cpp.inlayHints.referenceOperator.enabled": true,
  "C_Cpp.inlayHints.referenceOperator.showSpace": true,

  /* config */

  "remote.SSH.remotePlatform": {
    "sds-40-server": "linux",
    "sds-123-server": "linux"
  },

  /* 실험 */

  // [diff 편집기 보강되었다고 하길래 써봄](https://code.visualstudio.com/updates/v1_80#_new-diff-editor)
  "diffEditor.experimental.showEmptyDecorations": true,
  "diffEditor.experimental.showMoves": true,
  // [숨겨진 것에 대한 정보를 나타내주는 듯?](https://code.visualstudio.com/updates/v1_82#_collapsed-unchanged-code-headers)
  "diffEditor.hideUnchangedRegions.enabled": true,
  // [변경 사항 스크롤로 한번에 볼 수 있도록](https://code.visualstudio.com/updates/v1_85#_multifile-diff-editor)
  "multiDiffEditor.experimental.enabled": true,

  // [명령 센터에 디버깅 도구 표시되도록](https://code.visualstudio.com/updates/v1_83#_command-center-and-debug-toolbar)
  "debug.toolBarLocation": "commandCenter",

  // [여러 편집기 탭에서도 하이라이팅 되도록](https://code.visualstudio.com/updates/v1_85#_multi-document-highlighting)
  "editor.occurrencesHighlight": "multiFile",

  // [터미널에도 sticky scroll 적용되도록](https://code.visualstudio.com/updates/v1_85#_sticky-scroll)
  "terminal.integrated.stickyScroll.enabled": true,

  // [TS에서 import시 자동으로 type만 가져오는 설정 같음](https://code.visualstudio.com/updates/v1_85#_prefer-using-type-for-auto-imports)
  "typescript.preferences.preferTypeOnlyAutoImports": true,

  "window.zoomLevel": 1

  /* EOF */
}
